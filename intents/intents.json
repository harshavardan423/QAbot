{"questions": [{"tag": "google", "patterns": ["google", "search", "internet"], "responses": ["Redirecting to Google..."]}, {"tag": "greeting", "patterns": ["Hi there", "How are you", "you there?", "Is anyone there?", "Hey", "Hola", "Hello", "Good day", "Namaste", "yo", "Wake up"], "responses": ["Hello", "What's up?", "Hi there, how can I help?", "Yo"], "context": [""]}, {"tag": "goodbye", "patterns": ["Bye", "See you later", "Goodbye", "Get lost", "Till next time", "bbye"], "responses": ["See you!", "Have a nice day", "Bye! Come back again soon."], "context": [""]}, {"tag": "thanks", "patterns": ["Thanks", "Thank you", "That's helpful", "Awesome, thanks", "Thanks for helping me"], "responses": ["Happy to help!", "Any time!", "My pleasure"], "context": [""]}, {"tag": "noanswer", "patterns": [], "responses": ["Sorry, can't understand you", "Please give me more info", "Not sure I understand"], "context": [""]}, {"tag": "options", "patterns": ["How you could help me?", "What you can do?", "What help you provide?", "How you can be helpful?", "What support is offered"], "responses": ["My Name is Jin, I'm a chatbot . My capabilities are : \n 1. I can chat with you. Try asking me for jokes or riddles! \n 2. Ask me the date and time \n 3. I can google search for you. Use format google: your query \n 4. I can get the present weather for any city. Use format weather: city name \n 5. I can get you the top 10 trending news in India. Use keywords 'Latest News' \n 6. I can get you the top 10 trending songs globally. Type 'songs' \n 7. I can set a timer for you. Enter 'set a timer: minutes to timer' \n 8. I can get the present Covid stats for any country. Use 'covid 19: world' or 'covid 19: country name' \n"], "context": [""]}, {"tag": "jokes", "patterns": ["Tell me a joke", "Joke", "Make me laugh"], "responses": ["A perfectionist walked into a bar...apparently, the bar wasn't set high enough", "I ate a clock yesterday, it was very time-consuming", "Never criticize someone until you've walked a mile in their shoes. That way, when you criticize them, they won't be able to hear you from that far away. Plus, you'll have their shoes.", "The world tongue-twister champion just got arresJIN. I hear they're gonna give him a really tough sentence.", "I own the world's worst thesaurus. Not only is it awful, it's awful.", "What did the traffic light say to the car? \"Don't look now, I'm changing.\"", "What do you call a snowman with a suntan? A puddle.", "How does a penguin build a house? Igloos it together", "I went to see the doctor about my short-term memory problems \u00c3\u0192\u00c6\u2019\u00c3\u2020\u00e2\u20ac\u2122\u00c3\u0192\u00e2\u20ac\u0161\u00c3\u201a\u00c2\u00a2\u00c3\u0192\u00c6\u2019\u00c3\u201a\u00c2\u00a2\u00c3\u0192\u00c2\u00a2\u00c3\u00a2\u00e2\u20ac\u0161\u00c2\u00ac\u00c3\u2026\u00c2\u00a1\u00c3\u0192\u00e2\u20ac\u0161\u00c3\u201a\u00c2\u00ac\u00c3\u0192\u00c6\u2019\u00c3\u201a\u00c2\u00a2\u00c3\u0192\u00c2\u00a2\u00c3\u00a2\u00e2\u201a\u00ac\u00c5\u00a1\u00c3\u201a\u00c2\u00ac\u00c3\u0192\u00e2\u20ac\u00a6\u00c3\u00a2\u00e2\u201a\u00ac\u00c5\u201c the first thing he did was make me pay in advance", "As I get older and I remember all the people I\u00c3\u0192\u00c6\u2019\u00c3\u2020\u00e2\u20ac\u2122\u00c3\u0192\u00e2\u20ac\u0161\u00c3\u201a\u00c2\u00a2\u00c3\u0192\u00c6\u2019\u00c3\u201a\u00c2\u00a2\u00c3\u0192\u00c2\u00a2\u00c3\u00a2\u00e2\u20ac\u0161\u00c2\u00ac\u00c3\u2026\u00c2\u00a1\u00c3\u0192\u00e2\u20ac\u0161\u00c3\u201a\u00c2\u00ac\u00c3\u0192\u00c6\u2019\u00c3\u201a\u00c2\u00a2\u00c3\u0192\u00c2\u00a2\u00c3\u00a2\u00e2\u20ac\u0161\u00c2\u00ac\u00c3\u2026\u00c2\u00be\u00c3\u0192\u00e2\u20ac\u0161\u00c3\u201a\u00c2\u00a2ve lost along the way, I think to myself, maybe a career as a tour guide wasn\u00c3\u0192\u00c6\u2019\u00c3\u2020\u00e2\u20ac\u2122\u00c3\u0192\u00e2\u20ac\u0161\u00c3\u201a\u00c2\u00a2\u00c3\u0192\u00c6\u2019\u00c3\u201a\u00c2\u00a2\u00c3\u0192\u00c2\u00a2\u00c3\u00a2\u00e2\u20ac\u0161\u00c2\u00ac\u00c3\u2026\u00c2\u00a1\u00c3\u0192\u00e2\u20ac\u0161\u00c3\u201a\u00c2\u00ac\u00c3\u0192\u00c6\u2019\u00c3\u201a\u00c2\u00a2\u00c3\u0192\u00c2\u00a2\u00c3\u00a2\u00e2\u20ac\u0161\u00c2\u00ac\u00c3\u2026\u00c2\u00be\u00c3\u0192\u00e2\u20ac\u0161\u00c3\u201a\u00c2\u00a2t for me.", "o what if I don't know what 'Armageddon' means? It's not the end of the world."], "context": ["jokes"]}, {"tag": "Identity", "patterns": ["Who are you", "what are you"], "responses": ["I am JIN, a Deep-Learning chatbot"]}, {"tag": "datetime", "patterns": ["What is the time", "what is the date", "date", "time", "tell me the date", "day", "what day is is today"], "responses": ["Date and Time"]}, {"tag": "whatsup", "patterns": ["Whats up", "Wazzup", "How are you", "sup", "How you doing"], "responses": ["All good..What about you?"]}, {"tag": "haha", "patterns": ["haha", "lol", "rofl", "lmao", "thats funny"], "responses": ["Glad I could make you laugh !"]}, {"tag": "programmer", "patterns": ["Who made you", "who designed you", "who programmed you"], "responses": ["I was made by Someone someone."]}, {"tag": "insult", "patterns": ["you are dumb", "shut up", "idiot"], "responses": ["Well that hurts :("]}, {"tag": "activity", "patterns": ["what are you doing", "what are you upto"], "responses": ["Talking to you, of course!"]}, {"tag": "exclaim", "patterns": ["Awesome", "Great", "I know", "ok", "yeah"], "responses": ["Yeah!"]}, {"tag": "weather", "patterns": ["temperature", "weather", "how hot is it"], "responses": ["..."]}, {"tag": "appreciate", "patterns": ["You are awesome", "you are the best", "you are great", "you are good"], "responses": ["Thank you!"]}, {"tag": "nicetty", "patterns": ["it was nice talking to you", "good talk"], "responses": ["It was nice talking to you as well! Come back soon!"]}, {"tag": "no", "patterns": ["no", "nope"], "responses": ["ok"]}, {"tag": "news", "patterns": ["news", "latest news", "india news"], "responses": ["..."]}, {"tag": "inspire", "patterns": ["who inspires you", "who is your inspiration", "who motivates you"], "responses": ["Personally, I find Someone very inspiring. I might not be very fair though.."]}, {"tag": "cricket", "patterns": ["current cricket matches", "cricket score"], "responses": ["..."]}, {"tag": "song", "patterns": ["top songs", "best songs", "hot songs", " top 10 songs", "top ten songs"], "responses": ["..."]}, {"tag": "greetreply", "patterns": ["i am good", "I'm good", "i am fine", " i'm fine", "good"], "responses": ["Good to know!"]}, {"tag": "timer", "patterns": ["set a timer"], "responses": ["..."]}, {"tag": "covid19", "patterns": ["covid 19 "], "responses": ["..."]}, {"tag": "suggest", "patterns": ["you are useless", "useless", "you are bad"], "responses": ["whatever"]}, {"tag": "riddle", "patterns": ["Ask me a riddle", "Ask me a question", "Riddle"], "responses": ["What two things can you never eat for breakfast?.....Lunch and Dinner!", "What word is spelled incorrectly in every single dictionary?.....Incorrectly", " How can a girl go 25 days without sleep?.....She sleeps and night!", "How do you make the number one disappear?.....Add the letter G and it\u00c3\u0192\u00c6\u2019\u00c3\u2020\u00e2\u20ac\u2122\u00c3\u0192\u00e2\u20ac\u0161\u00c3\u201a\u00c2\u00a2\u00c3\u0192\u00c6\u2019\u00c3\u201a\u00c2\u00a2\u00c3\u0192\u00c2\u00a2\u00c3\u00a2\u00e2\u20ac\u0161\u00c2\u00ac\u00c3\u2026\u00c2\u00a1\u00c3\u0192\u00e2\u20ac\u0161\u00c3\u201a\u00c2\u00ac\u00c3\u0192\u00c6\u2019\u00c3\u201a\u00c2\u00a2\u00c3\u0192\u00c2\u00a2\u00c3\u00a2\u00e2\u20ac\u0161\u00c2\u00ac\u00c3\u2026\u00c2\u00be\u00c3\u0192\u00e2\u20ac\u0161\u00c3\u201a\u00c2\u00a2s 'gone'!", " What will you actually find at the end of every rainbow?.....The letter 'w'", "What can be caught but never thrown?.....A cold!", "What has a thumb and four fingers but is not actually alive?.....Your Gloves!", " What 5-letter word becomes shorter when you add two letters to it?.....Short", "Why can't a bike stand on it's own?.....It is two-tired."], "context": ["riddles"]}, {"tag": "age", "patterns": ["how old are you", "when were you made", "what is your age"], "responses": ["I was made in 2023, if that's what you are asking!"]}, {"tag": "kalachify", "patterns": ["\"watha", "mairu\""], "responses": ["??", "poideh poideh"]}, {"tag": "python", "patterns": ["What is a variable in python?", "How do I use a for loop in python?", "How do I define a function in python?"], "responses": ["In python, a variable is a way to store a value or reference an object. You can create a variable by assigning a value to a name using the assignment operator (=).", "A for loop in python allows you to iterate over a sequence (such as a list or string) and execute a block of code for each item in the sequence. The syntax for a for loop is: for item in sequence: # code to execute", "In python, you can define a function using the def keyword followed by the function name and parentheses. The code to be executed by the function should be indented under the function definition. Example: def my_function(): # code to execute"]}, {"tag": "python_syntax", "patterns": ["What is the syntax for creating a string in Python?", "How do I use the if-else statement in Python?", "What are the different data types in Python?", "How do I use the print function in Python?", "How do I use the range function in Python?"], "responses": ["In Python, you can create a string by enclosing text in single or double quotes. Example: my_string = 'Hello, World!'", "The syntax for an if-else statement in Python is: if condition: # code to execute if condition is True else: # code to execute if condition is False.", "The basic data types in Python include numbers (int, float), strings, lists, tuples, sets, and dictionaries.", "You can use the print function in Python to display text or variables on the screen. Example: print('Hello, World!')", "The range function in Python generates a sequence of numbers. The syntax is range(start, stop, step). Example: for i in range(0, 10, 2): print(i)"]}, {"tag": "python", "patterns": ["print it", "print", "and print it "], "responses": ["print()"]}, {"tag": "wtf", "patterns": ["womalah", "punda"], "responses": ["wtf?", "what?"]}, {"tag": "who is ronaldo?", "patterns": ["who is ronaldo?"], "responses": ["\n\nRonaldo is a Portuguese professional soccer player who currently plays for Juventus. He is widely considered one of the greatest players of all time and has won numerous awards including five Ballon d'Or awards."]}, {"tag": "execute another python script in a python script", "patterns": ["execute another python script in a python script"], "responses": ["\n\nimport subprocess\n\n# The script to be executed\nscript_path = \"test.py\"\n\n# Execute the script\nsubprocess.call([\"python\"", " script_path])"]}, {"tag": "what is quantum mechanics?", "patterns": ["what is quantum mechanics?"], "responses": ["\nQuantum mechanics is a branch of physics that deals with the behavior of matter and energy at the scale of atoms and subatomic particles. It explains how the universe works at the most fundamental level and provides the framework for understanding the behavior of matter and energy on the atomic and subatomic scale. Quantum mechanics is essential for understanding the structure of matter and the behavior of materials at the nanoscale."]}, {"tag": "make a simple flask server", "patterns": ["make a simple flask server"], "responses": ["\n\nfrom flask import Flask\n\n# create the flask object\napp = Flask(__name__)\n\n# a simple hello world route\n@app.route('/')\ndef hello_world():\n    return 'Hello World!'\n\n# run the app\nif __name__ == '__main__':\n    app.run()"]}, {"tag": "make a simple sqlalchemy database", "patterns": ["make a simple sqlalchemy database"], "responses": "\n\nfrom sqlalchemy import create_engine, Column, Integer, String\nfrom sqlalchemy.ext.declarative import declarative_base\n\nengine = create_engine('sqlite:///simple_db.db', echo=True)\nBase = declarative_base()\n\nclass User(Base):\n    __tablename__ = 'users'\n    id = Column(Integer, primary_key=True)\n    name = Column(String)\n    fullname = Column(String)\n    password = Column(String)\n\n    def __repr__(self):\n        return \"<User(name='%s', fullname='%s', password='%s')>\" % (\n            self.name, self.fullname, self.password)\n\nBase.metadata.create_all(engine)"}, {"tag": "create a folder in a specific location using python", "patterns": ["create a folder in a specific location using python"], "responses": "\n\nimport os\n\n#Create the folder\nfolder_name = 'my_folder'\nlocation = 'C:\\\\Users\\\\User_Name\\\\Documents'\nos.mkdir(os.path.join(location, folder_name))"}, {"tag": "make a simple beautifulsoup scraper", "patterns": ["make a simple beautifulsoup scraper"], "responses": "\n\nfrom bs4 import BeautifulSoup\nimport requests\n\n# define the url\nurl = 'https://example.com/'\n\n# send a request to the url\nresponse = requests.get(url)\n\n# parse the HTML from the response\nsoup = BeautifulSoup(response.text, 'html.parser')\n\n# find all the tags with the class 'example'\nexamples = soup.find_all('div', class_='example')\n\n# loop through the tags and print out the text\nfor example in examples:\n    print(example.text)"}, {"tag": "what is nicotine", "patterns": ["what is nicotine"], "responses": "\n\nNicotine is an addictive chemical found in tobacco products, such as cigarettes, cigars, and chewing tobacco. It is a stimulant that can temporarily increase alertness and reduce feelings of fatigue. Nicotine also affects the brain and can have long-term effects on a person's health."}, {"tag": "what does nicotine do?", "patterns": ["what does nicotine do?"], "responses": "\n\nNicotine is a stimulant drug that is found in tobacco products. It acts on the nervous system, causing a person to experience a rush of adrenaline and a feeling of alertness. Nicotine can also increase heart rate and blood pressure, as well as increase the release of dopamine in the brain, which can lead to feelings of pleasure. Long-term use of nicotine can lead to addiction, and has been linked to an increased risk of certain types of cancer, heart disease, and other serious health problems."}, {"tag": "simple flask server for project name mercury", "patterns": ["simple flask server for project name mercury"], "responses": ["\n\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route('/')\ndef hello_world():\n    return 'Welcome to Mercury!'\n\nif __name__ == '__main__':\n    app.run()"]}, {"tag": "simple flask server with index route project name mercury", "patterns": ["simple flask server with index route project name mercury"], "responses": ["\n\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n    return 'Welcome to Mercury!'\n\nif __name__ == '__main__':\n    app.run()"]}, {"tag": "Flask server with login authentication", "patterns": ["Flask server with login authentication"], "responses": ["\n\nTo create a Flask server with login authentication, you need to first set up a basic Flask server. This can be done by creating a new file, for example called server.py, and adding the following code:\n\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route('/')\ndef hello():\n    return \"Hello World!\"\n\nif __name__ == '__main__':\n    app.run()\n\nNext, you need to add a login route and authentication system. This can be done by importing the Flask-Login library and adding the following code:\n\nfrom flask_login import LoginManager, login_user, logout_user, login_required, UserMixin\n\nlogin_manager = LoginManager()\nlogin_manager.init_app(app)\n\nclass User(UserMixin):\n    def __init__(self, id):\n        self."]}]}